## These SQL queries were performed on a database named Chinook that contains 11 tables. These queries demonstrate self joins, multiple joins, and general SQL skills.

## Show Customers (their full names, customer ID, and country) who are not in the US.

SELECT CustomerId, FirstName, LastName, Country
FROM customers
WHERE country != 'USA'

## Show only the Customers from Brazil

SELECT *
FROM customers
WHERE country = 'Brazil'

## Show only the Customers from Brazil and their Support Rep

SELECT customers.FirstName, customers.LastName, customers.Country, employees.FirstName AS SupportRepFirst, employees.LastName AS SupportRepLast
FROM customers
JOIN employees
ON customers.SupportRepId = employees.EmployeeId
WHERE customers.Country = 'Brazil'

## Find the Invoices of customers who are from Brazil. The resulting table should show the customers full name, Invoice ID, Date of the invoice, and billing country.

SELECT c.FirstName, c.LastName, i.InvoiceId, i.InvoiceDate, i.BillingCountry
FROM customers c
JOIN invoices i
ON c.CustomerId = i.CustomerId
WHERE c.Country = 'Brazil'

## Find a unique/distinct list of billing countries from the Invoice table.

SELECT DISTINCT BillingCountry
FROM invoices

## Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.

SELECT e.FirstName, e.LastName, c.FirstName, c.LastName, c.Country, i.Total
FROM employees e
JOIN customers c ON e.EmployeeId = c.SupportRepId
JOIN invoices i ON c.CustomerId = i.CustomerId


## Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.

SELECT i.Total, c.FirstName, c.LastName, c.Country, e.FirstName AS SalesAgentFirst, e.LastName AS SalesAgentLast
FROM employees e
JOIN customers c ON e.EmployeeId = c.SupportRepId
JOIN invoices i ON c.CustomerId = i.CustomerId

## How many invoices were there in 2009?

SELECT COUNT(*)
FROM invoices
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31'

## What were the total sales for 2009?

SELECT SUM(Total) AS TotalSales2009
FROM invoices
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31'

## Write a query that includes the purchased track name with each invoice line ID.

SELECT i.InvoiceLineId, t.Name
FROM invoice_items i
JOIN tracks t ON i.TrackId = t.TrackId

## Write a query that includes the purchased track name AND artist name with each invoice line ID.

SELECT i.InvoiceLineId, t.Name AS Track_Name, artists.Name AS Artists_Name
FROM invoice_items i
LEFT JOIN tracks t ON i.TrackId = t.TrackId
JOIN albums a ON t.AlbumId = a.AlbumId
LEFT JOIN artists ON a.ArtistId = artists.ArtistId

## Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre

SELECT t.Name AS Track_Name, a.Title AS Album_Title, m.Name AS Media_Type, g.Name AS Genre
FROM tracks t
JOIN albums a ON t.AlbumId = a.AlbumId
JOIN media_types m ON t.MediaTypeId = m.MediaTypeId
JOIN genres g ON t.GenreId = g.GenreId

## Show the total sales made by each agent

SELECT ROUND(SUM(i.Total), 2) AS 'Total Sales', e.FirstName, e.LastName
FROM invoices i
JOIN customers c ON i.CustomerId = c.CustomerId
JOIN employees e ON c.SupportRepId = e.EmployeeId
WHERE e.Title = 'Sales Support Agent'
GROUP BY e.FirstName

## Which sales agent made the most dollars in sales in 2009?

SELECT ROUND(SUM(i.Total), 2) AS 'Total Sales', e.FirstName, e.LastName
FROM invoices i
JOIN customers c ON i.CustomerId = c.CustomerId
JOIN employees e ON c.SupportRepId = e.EmployeeId
WHERE i.InvoiceDate LIKE '%2009%'
AND e.Title = 'Sales Support Agent'
GROUP BY e.FirstName
ORDER BY ROUND(SUM(i.Total), 2) DESC
LIMIT 1

## Make a table showing who employees names, their titles, and who they report to (self-join example)

SELECT employees.FirstName, employees.LastName, employees.Title AS EmployeeTitle, reports.FirstName as ManagerFirstName, reports.LastName as ManagerLastName, reports.Title AS ManagerTitle
FROM employees
JOIN employees reports
ON employees.ReportsTo = reports.EmployeeId
ORDER BY ManagerTitle

## List all of the tracks by Aerosmith, AC/DC, and Alanis Morisette and the playlists they are on

SELECT DISTINCT t.Name AS 'Track Name', artists.Name AS 'Artist Name', p.Name AS 'Playlist Name'
FROM tracks t
JOIN playlist_track pt ON pt.TrackId = t.TrackId
JOIN playlists p ON p.PlaylistId = pt.PlaylistId
JOIN albums a ON t.AlbumId = a.AlbumId
JOIN artists ON a.ArtistId = artists.ArtistId
WHERE artists.Name = 'Aerosmith' OR artists.Name = 'AC/DC' OR artists.Name LIKE 'Alanis%'
